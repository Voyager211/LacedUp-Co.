<div class="container-fluid min-vh-100 d-flex align-items-center justify-content-center" style="background-color: #E5E5E5;">
  <div class="row shadow rounded overflow-hidden" style="max-width: 500px;">
    <div class="col bg-white p-5">
      <div class="text-center mb-3">
        <img src="https://res.cloudinary.com/daqfxkc3u/image/upload/v1749703192/laceduplogowhitebg_oundjw.png" alt="LacedUp Logo" style="height: 70px;">
      </div>
      <h4 class="fw-bold text-center mb-3">Verify OTP</h4>
      <p class="text-center text-secondary">An OTP has been sent to <strong><%= email %></strong></p>

      <form id="otp-form" class="mt-4">
        <input type="hidden" name="email" id="email" value="<%= email %>">
        <div class="mb-3">
          <input type="text" id="otp" name="otp" class="form-control text-center" maxlength="6" placeholder="Enter 6-digit OTP" required>
        </div>
        <button type="submit" class="btn btn-primary-custom w-100">Verify OTP</button>
      </form>

      <p class="text-center text-secondary mt-3" id="timer">Code expires in: <span id="countdown">02:00</span></p>

      <div class="text-center mt-3">
        <a href="#" class="text-decoration-none" id="resend-btn">Resend OTP</a>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  const form = document.getElementById('otp-form');
  const countdownSpan = document.getElementById('countdown');
  let timer = 120;

  function updateCountdown() {
    const min = Math.floor(timer / 60).toString().padStart(2, '0');
    const sec = (timer % 60).toString().padStart(2, '0');
    countdownSpan.textContent = `${min}:${sec}`;
    if (timer > 0) timer--;
  }
  setInterval(updateCountdown, 1000);

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const email = document.getElementById('email').value.trim();
    const otp = document.getElementById('otp').value.trim();

    try {
      const res = await fetch('/verify-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, otp })
      });

      const data = await res.json();
      if (res.ok) {
        Swal.fire({
          icon: 'success',
          title: 'OTP Verified',
          showConfirmButton: false,
          timer: 1500
        }).then(() => {
          window.location.href = '/home';
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Verification Failed',
          text: data.error || 'Invalid OTP'
        });
      }
    } catch (err) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong!'
      });
    }
  });

  document.getElementById('resend-btn').addEventListener('click', async (e) => {
    e.preventDefault();
    const email = document.getElementById('email').value.trim();
    try {
      const res = await fetch('/resend-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email })
      });

      const data = await res.json();
      if (res.ok) {
        Swal.fire('OTP Sent!', 'A new OTP has been sent to your email.', 'success');
        timer = 120; // reset timer
      } else {
        Swal.fire('Error', data.error || 'Could not resend OTP.', 'error');
      }
    } catch (err) {
      Swal.fire('Error', 'Something went wrong!', 'error');
    }
  });
</script>
