<div class="container-fluid min-vh-100 d-flex align-items-center justify-content-center" style="background-color: #E5E5E5;">
  <div class="row shadow rounded overflow-hidden" style="max-width: 500px;">
    <div class="col bg-white p-5">
      <div class="text-center mb-3">
        <a href="/" class="text-decoration-none">
          <img src="https://res.cloudinary.com/daqfxkc3u/image/upload/v1749703192/laceduplogowhitebg_oundjw.png" alt="LacedUp Logo" style="height: 70px; cursor: pointer;">
        </a>
      </div>
      <h4 class="fw-bold text-center mb-3">Enter OTP</h4>
      <p class="text-center text-secondary">OTP sent to <strong><%= email %></strong></p>

      <form id="otp-form">
        <input type="hidden" id="email" name="email" value="<%= email %>">
        <div class="mb-3">
          <input type="text" id="otp" name="otp" class="form-control text-center" maxlength="6" placeholder="Enter 6-digit OTP" required>
        </div>
        <button type="submit" class="btn btn-primary-custom w-100">Verify OTP</button>
      </form>

      <div class="text-center mt-3">
        <a href="#" id="resend-btn" class="text-decoration-none" style="color: #6c757d; cursor: not-allowed;">
          <span id="resend-text">Resend OTP in <span id="countdown">30</span>s</span>
        </a>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // Prevent back button navigation
  (function() {
    if (window.history && window.history.pushState) {
      window.history.pushState('forward', null, window.location.href);
      window.addEventListener('popstate', function() {
        window.history.pushState('forward', null, window.location.href);
      });
    }
  })();

  const form = document.getElementById('otp-form');
  const resendBtn = document.getElementById('resend-btn');
  const resendText = document.getElementById('resend-text');
  const countdownSpan = document.getElementById('countdown');
  let resendTimer = 30;
  let resendInterval;

  // Initialize resend timer
  function startResendTimer() {
    resendTimer = 30;
    resendBtn.style.pointerEvents = 'none';
    resendBtn.style.color = '#6c757d';
    resendBtn.style.cursor = 'not-allowed';

    resendInterval = setInterval(() => {
      resendTimer--;
      countdownSpan.textContent = resendTimer;

      if (resendTimer <= 0) {
        clearInterval(resendInterval);
        resendBtn.style.pointerEvents = 'auto';
        resendBtn.style.color = '#007bff';
        resendBtn.style.cursor = 'pointer';
        resendText.innerHTML = 'Resend OTP';
      } else {
        resendText.innerHTML = `Resend OTP in <span id="countdown">${resendTimer}</span>s`;
      }
    }, 1000);
  }

  // Start timer on page load
  document.addEventListener('DOMContentLoaded', function() {
    startResendTimer();
  });

  // OTP form submission
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const email = document.getElementById('email').value.trim();
    const otp = document.getElementById('otp').value.trim();

    try {
      const res = await fetch('/reset-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, otp })
      });

      const data = await res.json();

      if (res.ok && data.redirect) {
        Swal.fire({
          icon: 'success',
          title: 'OTP Verified',
          showConfirmButton: false,
          timer: 1000
        }).then(() => {
          window.location.href = data.redirect;
        });
      } else {
        Swal.fire({
          icon: 'error',
          title: 'Invalid OTP',
          text: data.error || 'Try again.'
        });
      }
    } catch (err) {
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong!'
      });
    }
  });

  // Resend OTP functionality
  resendBtn.addEventListener('click', async (e) => {
    e.preventDefault();

    // Check if button is disabled (using pointer events)
    if (resendBtn.style.pointerEvents === 'none') return;

    const email = document.getElementById('email').value.trim();

    try {
      // Show loading state
      const originalText = resendText.innerHTML;
      resendText.innerHTML = 'Sending...';
      resendBtn.style.pointerEvents = 'none';
      resendBtn.style.color = '#6c757d';
      resendBtn.style.cursor = 'not-allowed';

      const res = await fetch('/resend-reset-otp', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email })
      });

      const data = await res.json();

      if (res.ok) {
        // Show success message
        Swal.fire({
          icon: 'success',
          title: 'OTP Sent!',
          text: 'A new OTP has been sent to your email.',
          showConfirmButton: false,
          timer: 1500
        });

        // Restart the timer
        clearInterval(resendInterval);
        startResendTimer();
      } else {
        // Show error and restore button
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: data.error || 'Could not resend OTP. Please try again.'
        });

        resendText.innerHTML = originalText;
        resendBtn.style.pointerEvents = 'auto';
        resendBtn.style.color = '#007bff';
        resendBtn.style.cursor = 'pointer';
      }
    } catch (err) {
      // Show error and restore button
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Something went wrong! Please try again.'
      });

      resendText.innerHTML = 'Resend OTP';
      resendBtn.style.pointerEvents = 'auto';
      resendBtn.style.color = '#007bff';
      resendBtn.style.cursor = 'pointer';
    }
  });
</script>